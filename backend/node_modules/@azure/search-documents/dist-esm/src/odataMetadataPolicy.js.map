{"version":3,"file":"odataMetadataPolicy.js","sourceRoot":"","sources":["../../src/odataMetadataPolicy.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAGL,iBAAiB,EAKlB,MAAM,kBAAkB,CAAC;AAE1B,MAAM,gBAAgB,GAAG,QAAQ,CAAC;AAIlC;;;GAGG;AACH,MAAM,UAAU,mBAAmB,CAAC,aAA4B;IAC9D,OAAO;QACL,MAAM,EAAE,CAAC,UAAyB,EAAE,OAA6B,EAAE,EAAE;YACnE,OAAO,IAAI,mBAAmB,CAAC,UAAU,EAAE,OAAO,EAAE,EAAE,aAAa,EAAE,CAAC,CAAC;QACzE,CAAC;KACF,CAAC;AACJ,CAAC;AAED,MAAM,mBAAoB,SAAQ,iBAAiB;IAGjD,YACE,UAAyB,EACzB,OAAiC,EACjC,aAA+C;QAE/C,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC,aAAa,CAAC;IACnD,CAAC;IAEM,KAAK,CAAC,WAAW,CAAC,WAA4B;QACnD,WAAW,CAAC,OAAO,CAAC,GAAG,CACrB,gBAAgB,EAChB,mCAAmC,IAAI,CAAC,aAAa,EAAE,CACxD,CAAC;QACF,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;IACnD,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  RequestPolicy,\n  RequestPolicyOptions,\n  BaseRequestPolicy,\n  WebResourceLike,\n  HttpOperationResponse,\n  RequestPolicyFactory,\n  RequestPolicyOptionsLike\n} from \"@azure/core-http\";\n\nconst AcceptHeaderName = \"Accept\";\n\nexport type MetadataLevel = \"none\" | \"minimal\";\n\n/**\n * A policy factory for setting the Accept header to ignore odata metadata\n * @internal\n */\nexport function odataMetadataPolicy(metadataLevel: MetadataLevel): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new OdataMetadataPolicy(nextPolicy, options, { metadataLevel });\n    }\n  };\n}\n\nclass OdataMetadataPolicy extends BaseRequestPolicy {\n  private metadataLevel: MetadataLevel;\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptionsLike,\n    policyOptions: { metadataLevel: MetadataLevel }\n  ) {\n    super(nextPolicy, options);\n    this.metadataLevel = policyOptions.metadataLevel;\n  }\n\n  public async sendRequest(webResource: WebResourceLike): Promise<HttpOperationResponse> {\n    webResource.headers.set(\n      AcceptHeaderName,\n      `application/json;odata.metadata=${this.metadataLevel}`\n    );\n    return this._nextPolicy.sendRequest(webResource);\n  }\n}\n"]}