{"version":3,"file":"skillsets.js","sourceRoot":"","sources":["../../../../../src/generated/service/operations/skillsets.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SearchServiceClient } from \"../searchServiceClient\";\nimport {\n  SearchIndexerSkillset,\n  SkillsetsCreateOrUpdateOptionalParams,\n  SkillsetsCreateOrUpdateResponse,\n  SkillsetsDeleteOptionalParams,\n  SkillsetsGetOptionalParams,\n  SkillsetsGetResponse,\n  SkillsetsListOptionalParams,\n  SkillsetsListResponse,\n  SkillsetsCreateOptionalParams,\n  SkillsetsCreateResponse\n} from \"../models\";\n\n/** Class representing a Skillsets. */\nexport class Skillsets {\n  private readonly client: SearchServiceClient;\n\n  /**\n   * Initialize a new instance of the class Skillsets class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SearchServiceClient) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a new skillset in a search service or updates the skillset if it already exists.\n   * @param skillsetName The name of the skillset to create or update.\n   * @param skillset The skillset containing one or more skills to create or update in a search service.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    skillsetName: string,\n    skillset: SearchIndexerSkillset,\n    options?: SkillsetsCreateOrUpdateOptionalParams\n  ): Promise<SkillsetsCreateOrUpdateResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      skillsetName,\n      skillset,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      createOrUpdateOperationSpec\n    ) as Promise<SkillsetsCreateOrUpdateResponse>;\n  }\n\n  /**\n   * Deletes a skillset in a search service.\n   * @param skillsetName The name of the skillset to delete.\n   * @param options The options parameters.\n   */\n  delete(\n    skillsetName: string,\n    options?: SkillsetsDeleteOptionalParams\n  ): Promise<coreHttp.RestResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      skillsetName,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      deleteOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Retrieves a skillset in a search service.\n   * @param skillsetName The name of the skillset to retrieve.\n   * @param options The options parameters.\n   */\n  get(\n    skillsetName: string,\n    options?: SkillsetsGetOptionalParams\n  ): Promise<SkillsetsGetResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      skillsetName,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getOperationSpec\n    ) as Promise<SkillsetsGetResponse>;\n  }\n\n  /**\n   * List all skillsets in a search service.\n   * @param options The options parameters.\n   */\n  list(options?: SkillsetsListOptionalParams): Promise<SkillsetsListResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listOperationSpec\n    ) as Promise<SkillsetsListResponse>;\n  }\n\n  /**\n   * Creates a new skillset in a search service.\n   * @param skillset The skillset containing one or more skills to create in a search service.\n   * @param options The options parameters.\n   */\n  create(\n    skillset: SearchIndexerSkillset,\n    options?: SkillsetsCreateOptionalParams\n  ): Promise<SkillsetsCreateResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      skillset,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      createOperationSpec\n    ) as Promise<SkillsetsCreateResponse>;\n  }\n}\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreHttp.OperationSpec = {\n  path: \"/skillsets('{skillsetName}')\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SearchIndexerSkillset\n    },\n    201: {\n      bodyMapper: Mappers.SearchIndexerSkillset\n    },\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  requestBody: Parameters.skillset,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.skillsetName],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.xMsClientRequestId,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch,\n    Parameters.prefer\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreHttp.OperationSpec = {\n  path: \"/skillsets('{skillsetName}')\",\n  httpMethod: \"DELETE\",\n  responses: {\n    204: {},\n    404: {},\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.skillsetName],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.xMsClientRequestId,\n    Parameters.ifMatch,\n    Parameters.ifNoneMatch\n  ],\n  serializer\n};\nconst getOperationSpec: coreHttp.OperationSpec = {\n  path: \"/skillsets('{skillsetName}')\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SearchIndexerSkillset\n    },\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.skillsetName],\n  headerParameters: [Parameters.accept, Parameters.xMsClientRequestId],\n  serializer\n};\nconst listOperationSpec: coreHttp.OperationSpec = {\n  path: \"/skillsets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListSkillsetsResult\n    },\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.select],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.accept, Parameters.xMsClientRequestId],\n  serializer\n};\nconst createOperationSpec: coreHttp.OperationSpec = {\n  path: \"/skillsets\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.SearchIndexerSkillset\n    },\n    default: {\n      bodyMapper: Mappers.SearchError\n    }\n  },\n  requestBody: Parameters.skillset,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.xMsClientRequestId\n  ],\n  mediaType: \"json\",\n  serializer\n};\n"]}